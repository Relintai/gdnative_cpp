name: Continuous integration
on: [push, pull_request]

env:
  # Only used for the cache key. Increment version to force clean build.
  PANDEMONIUM_BASE_BRANCH: 3.x

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: üêß Linux (GCC)
            os: ubuntu-18.04
            platform: linux
            artifact-name: pandemonium-cpp-linux-glibc2.27-x86_64-release
            artifact-path: bin/libpandemonium-cpp.linux.release.64.a
            pandemonium_zip: Pandemonium_v3.5-stable_linux_server.64.zip
            executable: Pandemonium_v3.5-stable_linux_server.64
            cache-name: linux-x86_64

          - name: üèÅ Windows (x86_64, MSVC)
            os: windows-2019
            platform: windows
            artifact-name: pandemonium-cpp-windows-msvc2019-x86_64-release
            artifact-path: bin/libpandemonium-cpp.windows.release.64.lib
            cache-name: windows-x86_64-msvc

          - name: üèÅ Windows (x86_64, MinGW)
            os: windows-2019
            platform: windows
            artifact-name: pandemonium-cpp-linux-mingw-x86_64-release
            artifact-path: bin/libpandemonium-cpp.windows.release.64.a
            flags: use_mingw=yes
            cache-name: windows-x86_64-mingw

          - name: üçé macOS (universal)
            os: macos-11
            platform: osx
            artifact-name: pandemonium-cpp-macos-universal-release
            artifact-path: bin/libpandemonium-cpp.osx.release.64.a
            flags: macos_arch=universal
            pandemonium_zip: Pandemonium_v3.5-stable_osx.universal.zip
            executable: Pandemonium.app/Contents/MacOS/Pandemonium
            cache-name: macos-unversal

          - name: ü§ñ Android (arm64)
            os: ubuntu-18.04
            platform: android
            artifact-name: pandemonium-cpp-android-arm64-release
            artifact-path: bin/libpandemonium-cpp.android.release.arm64v8.a
            flags: ANDROID_NDK_ROOT=$ANDROID_NDK_LATEST_HOME android_arch=arm64v8
            cache-name: android-arm64

          - name: üçè iOS (arm64)
            os: macos-11
            platform: ios
            artifact-name: pandemonium-cpp-ios-arm64-release
            artifact-path: bin/libpandemonium-cpp.ios.release.arm64.a
            cache-name: ios-arm64

    env:
      SCONS_CACHE: ${{ github.workspace }}/.scons-cache/

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Pandemonium build cache
        uses: ./.github/actions/pandemonium-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Set up Python (for SCons)
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Linux dependencies
        if: ${{ matrix.platform == 'linux' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qqq build-essential pkg-config

      - name: Install scons
        run: |
          python -m pip install scons

      - name: Windows dependency (MinGW)
        if: ${{ matrix.platform == 'windows' }}
        uses: egor-tensin/setup-mingw@v2

      - name: Build pandemonium-cpp (debug)
        run: |
          scons platform=${{ matrix.platform }} target=debug ${{ matrix.flags }}

      - name: Build test without rebuilding pandemonium-cpp (debug)
        run: |
          cd test
          scons platform=${{ matrix.platform }} target=debug ${{ matrix.flags }} build_library=no

      - name: Build test and pandemonium-cpp (release)
        run: |
          cd test
          scons platform=${{ matrix.platform }} target=release ${{ matrix.flags }}

      - name: Run test GDNative library
        if: ${{ matrix.platform == 'linux' || matrix.platform == 'osx' }}
        run: |
          curl -LO https://downloads.tuxfamily.org/pandemoniumengine/3.5/${{ matrix.pandemonium_zip }}
          unzip ${{ matrix.pandemonium_zip }}
          ./${{ matrix.executable }} --path test -s script.gd

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-path }}
          if-no-files-found: error

  static-checks:
    name: üìä Static Checks (clang-format)
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Make apt sources.list use the default Ubuntu repositories
        run: |
          sudo rm -f /etc/apt/sources.list.d/*
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update

      - name: Install dependencies
        run: |
          sudo apt-get install -qq dos2unix recode clang-format-11
          sudo update-alternatives --remove-all clang-format
          sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-11 100

      - name: Style checks via clang-format
        run: |
          bash ./misc/scripts/clang_format.sh

      - name: Bindings generation checks (ensures get_file_list returns all generated files)
        run: |
          python ./misc/scripts/check_get_file_list.py
